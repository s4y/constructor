param'go 0.1 * =t

:def sceneDistance { =p
  p inv_camera_mat transform =p
  p p .z 0.1 * rotZ transform =p
  p p .x 10 / 0.4 + 1.5 * sf 1.2 + * =p
  p .y abs -1 * .3 +
  }

{
p =op

p inv_proj_mat transform normalize =direction

:def project direction * p inv_proj_mat transform +
:def marchOnce project sceneDistance

2
:loop 10
 dup marchOnce +
=dist

dist marchOnce
=surfDist

dist project =hitP

hitP 0 0 t vec3 - =hitP

hitP .z 8 * 1 mod bal abs
hitP .x 8 * 1 mod bal abs min
0.035 0.03 ss
surfDist 0.01 0 ss *
dist 7 1 ss *
vec4.1
draw
bail

# dist 20 5 ss =bri
surfDist 0.2 mod surfDist 1 hsv bri *
# 0.8 bri 0.9 * p .y abs fsf 0.1 * + - 0.2 0 1 clamp 5 pow 1 hsv
bri 0.5 1 ss *
}

5 *

draw
bail

fb'f uv tex 0.9 * +
drawto'f
fb'f uv tex draw
