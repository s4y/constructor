:def pinch
 { p 2.5 + =p cdist 2 * t - sin }
 { p 4.5 -3 3 vec3 - =p cdist 2 * t 10.1 * - sin } +
 { p .x p .y 0.2 * * t 1.9 * + sin } -
 { p .x -0.3 * p .y 0.5 * * sin } + 
 sin # 0.07 ssf 8 pow *

:def sdO { =p
 p 0 0 t vec3 - =p
 p .z pinch + sin unbal 10 / sf 0.1 * 1 + p * =p
 # p 0 p .z 4 * sin 0.1 * 0 vec3 + =p
 # p { p .zyx 10 / =p pinch } 0.02 * + =p
 p p .y 0.8 + vec4.2
 }

PI 1.5 / aspect 0.1 10 perspectiveProj inverse =invProj
p invProj transform =dir

:def project dir * p invProj transform +

0 0 0 0 vec4
:loop 30
 { .w dup project sdO =r r .w 0 max + r .xyz swap vec4.2 }
dup
.w =dist
.xyz =boxP

dist project =hitP

hitP sdO .w =surfDist

{
:def sd sdO .w
hitP estimateNormal
} =norm
0.5 =bri

{ boxP .zyx 10 / =p pinch } =ppp
ppp 0.0 * 0.5
ppp
abs dist 1020 500 ss * hsv
# surfDist 1 128 / 0 ss *
draw
