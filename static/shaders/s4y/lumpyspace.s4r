:def path { =t
 t 0.2 * cos t 0.2 * sin t -1 * vec3
 }

:def sdO {
 2 2 1 vec3 *
 dup =op =p
 p op .z path 1 1 0 vec3 * - =p
 p p .z dup PI mod - 0.1 * rotZ transform =p
 p 1.3 / cos =p
 op p length 1.01 - 0.5 * vec4.2
 }
 
PI 1.5 / aspect 0.1 10 perspectiveProj inverse =invProj
p invProj transform =dir

:def project dir * t path + p invProj transform +

0 0 0 0 vec4
:loop 80
 { .w dup project sdO =r r .w 0 max + r .xyz swap vec4.2 }
dup
.w =dist
.xyz =boxP

dist project =hitP

hitP sdO .w =surfDist

{
:def sd sdO .w
hitP estimateNormal
} =norm
0.5 =bri

norm 0.0 0.0 1 vec3 dot 

boxP .z 1 mod sf 0.1 * hitP .z sin 10 / sf 1 hsv *

100 90 dist dup path .z - smoothstep *
1 128 / 1 512 / surfDist smoothstep *

draw
