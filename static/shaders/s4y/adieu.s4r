1.5 1.5 1 vec3 p * =p

:def ring { =dizt
 50 =many
 fitp
 angle PI / 3 * cdist 0 vec3
 many * 0.5 + 1 mod 0.5 -
 0 0 0 vec3 distance =circ
 0.3 0.2 circ smoothstep
 0.15 *
 cdist dizt .5 many / + step inv *
 1.2 0.7 cdist smoothstep *
 }

{
1 0.4 ssf 0.1 * - p * =p
t 0.8 * =prog
p prog sin 0.02 * prog cos 0.02 * 0 vec3 0.1 ssf * +
0 0.1 0 vec3 +
=p
0.825 ring
}
{
1 0.2 ssf 0.1 * - p * =p
t 0.8 * =prog
p prog sin 0.05 * prog cos 0.05 * 0 vec3 0.1 ssf * + =p
0.925 ring
}

0.1 + vec3.1 1 vec4.2 +

draw

{

:def tri
 p .x 1.5 * abs p .y + p .y -1 * max

:def sqr
 p .x abs p .y abs max

:def circ
 p .xy 0 0 vec2 distance

:def outline { =x 0.15 0 0.5 x - abs smoothstep }

fitp
0 .2 0 vec3 p + =p

0.004 0.0
0.76 cdist - abs
smoothstep

0.001 0 angle 9 * t - =a
a sin =as
cdist 0.76 - =d
as unbal smoothstep d 0 step * max

0.3 *

0.011 0.01 as unbal PI * d PI 0.4 * * vec2 0 0 vec2 distance smoothstep max
0.5 *

{

a a 1.5 +  PI 2 * mod - PI 2 * 9 * mod =ww
a t + a 1.5 + PI 2 * mod - PI 2 * 9 * mod =www

{

p
www PI + 9 / rotZ transform
0 0.73 0 vec3 -
45 *
=p

ww PI 2 * / 3 mod =which

tri outline sqr outline which 1 step mix
circ outline which 2 step inv mix
}
0.5 *
max

vec4.1
draw

{
p .y unbal 0.6 + 2 / ssf 0.2 + 0 1 clamp 20 pow =flare

{
flare p .y 10 * t + sin * 0 0 vec3 p + =p
1 flare - 1 1 vec3 p * =p
0 flare 2 pow -0.5 * 0 vec3 p + =p
0.75 0.69 cdist smoothstep
0.9 0.6 cdist smoothstep
p .x 8 * p .y 2 * + sin p .y 8 * sin * unbal 0.5 * 0.5 + *
max
}

p .x 3.5 * cos unbal inv p .y 3 * unbal 0.1 + + 0 1 clamp 8 pow
p .x 5 * cos unbal inv p .y 7 * unbal + 0 1 clamp 8 pow inv 10 pow max
-0.0 0.5 p .y smoothstep 0.4 + 0 1 clamp min
0.03 * 0.00 - 0.7 1 flare + hsv *
}

}

draw

{

#0 0 1 translate
#t sin 0.1 * rotY *
#0 0 -1 translate *
PI 1.5 / 1 0.1 10 perspectiveProj
# *
inverse =invProj
p invProj transform =dir

:def project dir * p +

{

:def tri
 2 mod dup 1 min swap 1 - 0 max -

:def sd { =p
  # p
  # 0 0 8 vec3 +
  # t 0.5 * rotY transform
  # 0 0 8 vec3 - =p
  p aspect 1 1 vec3 * =p
  p .y 2 +
  p .x 2 *
  p .x -0.7 * +
  p .z +
  p .z -0.3 * +
  sin +
  p .x PI / 1 * cos unbal 2 * +
  # p .y 7 / p .z 1.5 / sin + tri sin +
  # p .y 12 / p .z -1.5 / sin + tri 0.3 * +
  p .z sin +
  p .y 5 * tri p .y 3 * tri + 0.1 * +
  2 /
  }

0
:loop 40
  dup project sd +
=dist

dist project =hitP
hitP sd =surfDist

hitP estimateNormal =norm

0.01 0 norm -0.5 1 1 vec3 normalize dot 4 pow 0.1 * 0.05 + hsv 
15 14.9 dist smoothstep *
draw


:def sd { =p p
 4.2 2.2 30 vec3 +
 -0.5 rotY transform
 =p
 p .xy length 0.4 - -1 *
 p .x abs 0.05 - min
 p .y abs p .x max 0.05 - min
 p .xy length 0.5 - max
 p .z abs 0.05 - max
 # 0.8 0.79 cd smoothstep -
 # 0.1 0.09 p .x abs smoothstep o min max
 # 0.1 0.09 p .y abs p .x max smoothstep o min max
 }

0
:loop 40
  dup project sd +
=dist

dist project =hitP
hitP sd =surfDist

hitP estimateNormal =norm

1 0 norm 1 0 1 vec3 normalize dot hsv 
40 39 dist smoothstep *
draw

}
