
1 vec4.1
p .x unbal ssf *

p .y unbal 2 dims .y / step =s
s *
{
p 0 2 dims .y / 0 vec3 - =p
fb'sfhist uv tex s inv * +
}
drawto'sfhist
# fb'f uv tex draw


{

p 1.2 1.2 1 vec3 * =p
fitp

:def sd {
 # 6 *
 =p
 p 0 fb'sfhist 0.1 p .z 1 mod inv vec2 tex .x 0.1 * 0.1 - 0 vec3 + =p
 p t sin 0.01 * rotY
 p .z t + sin 0.1 * t 0.4 * + t 0.1 * sin 4 pow 4 * + rotZ *
 transform =p
 p .xy 0 0 vec2 distance =cd
 1 0.99 cd smoothstep =o o
 0.8 0.79 cd smoothstep -
 0.1 0.09 p .x abs smoothstep o min max
 0.1 0.09 p .y abs p .x max smoothstep o min max
 }

PI 1.5 / aspect 0.1 10 perspectiveProj inverse =invProj
p invProj transform =dir

:def project dir * p +

0
:loop 40
  dup project sd +
=dist

dist project =hitP
hitP sd =surfDist

hitP estimateNormal =norm

norm abs 1 vec4.2
dist 10 / vec3.1 1 vec4.2
dist 0 step inv *
# dist 10 step *
# 0.0 0.1 norm .x norm .y max smoothstep *
draw

}
